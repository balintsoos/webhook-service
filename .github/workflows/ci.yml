name: CI

on:
  push:
    branches: [ main ]

env:
  IMAGE_NAME: ${{ secrets.DOCKER_HUB_USERNAME }}/webhook-service

jobs:
  build-test-image:
    name: Build test image
    runs-on: ubuntu-latest
    steps:
      - 
        name: Check out repository
        uses: actions/checkout@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Build test image
        uses: docker/build-push-action@v2
        with:
          context: .
          target: test
          tags: ${{ env.IMAGE_NAME }}:test
          outputs: type=docker,dest=/tmp/test_image.tar
      -
        name: Upload test image
        uses: actions/upload-artifact@v2
        with:
          name: test_image
          path: /tmp/test_image.tar
          retention-days: 1

  lint:
    name: Lint
    runs-on: ubuntu-latest
    needs: build-test-image
    steps:
      -
        name: Download test image
        uses: actions/download-artifact@v2
        with:
          name: test_image
          path: /tmp
      -
        name: Load test image
        run: docker load --input /tmp/test_image.tar
      -
        name: Lint
        run: docker run --rm ${{ env.IMAGE_NAME }}:test npm run lint

  unit-tests:
    name: Unit tests
    runs-on: ubuntu-latest
    needs: build-test-image
    steps:
      -
        name: Download test image
        uses: actions/download-artifact@v2
        with:
          name: test_image
          path: /tmp
      -
        name: Load test image
        run: docker load --input /tmp/test_image.tar
      -
        name: Run unit tests
        run: docker run --rm ${{ env.IMAGE_NAME }}:test npm run unit
  
  e2e-tests:
    name: E2E tests
    runs-on: ubuntu-latest
    needs: build-test-image
    steps:
      - 
        name: Check out repository
        uses: actions/checkout@v2
      -
        name: Download test image
        uses: actions/download-artifact@v2
        with:
          name: test_image
          path: /tmp
      -
        name: Load test image
        run: docker load --input /tmp/test_image.tar
      -
        name: Start Docker Compose
        run: docker-compose -f docker-compose.e2e.yml up --detach web event-worker notification-worker
      -
        name: Run E2E tests
        run: docker-compose -f docker-compose.e2e.yml up e2e-runner

  build-and-push-production-image:
    name: Build and push production image
    runs-on: ubuntu-latest
    needs: [ lint, unit-tests, e2e-tests ]
    steps:
      - 
        name: Check out repository
        uses: actions/checkout@v2
      - 
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - 
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - 
        name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      -
        name: Build and push production image
        uses: docker/build-push-action@v2
        with:
          context: .
          target: production
          platforms: linux/amd64,linux/arm64
          tags: ${{ env.IMAGE_NAME }}:latest
          push: true
