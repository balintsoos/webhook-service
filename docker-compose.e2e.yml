version: "3.8"

services:
  database:
    container_name: database
    image: mongo:4.4.1
    ports:
      - 27017:27017
    volumes:
      - database-volume:/data/db
    networks:
      - service-network

  queue:
    container_name: queue
    image: rabbitmq:3.8.9-management
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      - service-network

  web:
    container_name: web
    image: balintsoos/webhook-service:test
    command: ["ts-node", "src/processes/web/server.js"]
    environment:
      - PORT=8080
      - DATABASE_URL=mongodb://database:27017/webhook
    ports:
      - 8080:8080
    networks:
      - service-network
    depends_on:
      - database

  event-worker:
    container_name: event-worker
    image: balintsoos/webhook-service:test
    command: ["ts-node", "src/processes/worker/event-worker.js"]
    environment:
      - DATABASE_URL=mongodb://database:27017/webhook
      - QUEUE_URL=amqp://queue
    networks:
      - service-network
    depends_on:
      - database
      - queue
    restart: on-failure

  notification-worker:
    container_name: notification-worker
    image: balintsoos/webhook-service:test
    command: ["ts-node", "src/processes/worker/notification-worker.js"]
    environment:
      - QUEUE_URL=amqp://queue
    networks:
      - service-network
    depends_on:
      - queue
    restart: on-failure

  e2e-runner:
    container_name: e2e-runner
    image: balintsoos/webhook-service:test
    command: ["npm", "run", "e2e"]
    networks:
      - service-network
    depends_on:
      - web
      - event-worker
      - notification-worker

networks:
  service-network:
    driver: bridge

volumes:
  database-volume:
